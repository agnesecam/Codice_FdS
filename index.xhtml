<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
                    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

    <head>
        <title id="title">World Clocks</title>
        <meta name="description" content="" />
        <meta name="keywords" content="" />
        <meta name="coverage" content="Worldwide" />
        <meta name="copyright" content="Copyright Saxonica Ltd" />
        <meta name="title" content="Saxonica: XSLT and XQuery Processing" />
        <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
        <meta http-equiv="Content-Script-Type" content="text/javascript" />
        <style type="text/css">
            .mainClocks{
                width: 50%;
            }
            .clock{
                stroke: black;
                stroke-width: 1;
            }
            .label{
                fill: red;
                stroke: none;
                font-family: Arial;
                font-size: 7px;
                font-weight: bold;
            }
            span.label{
                color: red;
                font-size: large;
            }
            text,
            tspan.second{
                font-size: 10px;
                stroke: none;
            }
            .hourTick {
            stroke-width: 1.5;
            }
            .small{
            }
            .hour{
                stroke-width: 1.5;
            }
            .second{
                stroke: red;
            }</style>
        <script type="text/javascript" src="saxon-js/SaxonJS2.rt.js" language="javascript"></script>


        <script type="text/javascript">
            var thisDoc = window.document;
            
            var timezones = {
                "London": "PT0H", 
                "New York": "-PT5H",
                "San Francisco" : "-PT8H",
                "Delhi" : "PT5H30M",  
                "Tokyo" : "PT9H"
                };
                
            function setClocks() {
                var clocks = SaxonJS.XPath.evaluate(".//*[tokenize(@class)='clock']",thisDoc,{resultForm:"array"});
                for(var i =0; i &lt; clocks.length; i++) {
                    setClock(clocks[i]);
                }
            }
            
            function setClock(clock) {
                var findTime = "let $loc := normalize-space(.//*[@name='city']), "+
                "$t := if($loc = ('Local Time','')) then current-time() else adjust-time-to-timezone(current-time(),xs:dayTimeDuration(map:get($timezones,$loc)))" +
                "return map{'hour':hours-from-time($t), 'minute' : minutes-from-time($t) , 'second' : floor(seconds-from-time($t))}";
                var time = SaxonJS.XPath.evaluate(findTime, clock, {params: {"timezones": timezones}});
            
                var timeIndicators = SaxonJS.XPath.evaluate("map:merge(for $class in ('hour','minute','second') return map:entry($class,array{.//*[@class=$class]}))",clock);
                
                var computeAngles = "let $m := .?minute " +
                        "return map{'hour':(.?hour mod 12) * 30 + $m div 2, 'minute' : $m * 6, 'second' : .?second * 6}";
                var angles = SaxonJS.XPath.evaluate(computeAngles, time);
                
                for(var part in timeIndicators) {
                    var nodes = timeIndicators[part];
                    for(var i = 0; i &lt; nodes.length; i++) {
                        var node = nodes[i];
                        if(clock.namespaceURI == "http://www.w3.org/2000/svg" &amp;&amp; 
                            !(node.localName == "tspan" || node.localName == "text" )) {
                            node.setAttribute("transform","rotate("+ angles[part] + ")");
                        } else {
                            var t = time[part];
                            node.textContent = t &lt; 10 ? "0"+t : t;
                        }
                    }
                } 
            }            
            
            function run() { 
                setClocks();
                window.setInterval(setClocks,1000);
            }
        </script>
    </head>

    <body class="main" onload="run()">
        <h1>World Clocks</h1>
        <p>This webpage is a demonstration of XPath3.1 being supported via a Javascript API in the
            browser, invoking the XPath evaluation supported by Saxon-JS. (<a href="#api">The API
                can be found here.</a>) No use of XSLT is involved. Please examine the Javascript
            functions in the embedded script element for an illustration of the operation. Note that
            the display of the SVG under Safari or Internet Explorer may be only partially scaled - they don't
            particularly care for inline SVG.</p>
        <div class="clock">
            <p><span name="city" class="label">London</span> - <span class="hour">00</span>:<span
                    class="minute">00</span>:<span class="second">00</span></p>
            <p></p>
        </div>
        <div class="clock">
            <p><span name="city" class="label">San Francisco</span> - <span class="hour"
                    >00</span>:<span class="minute">00</span>:<span class="second">00</span></p>
            <p></p>
        </div>
        <svg xmlns="http://www.w3.org/2000/svg" version="1.1" viewBox="0 0 100 100"
            preserveAspectRatio="xMinYMin" width="100%"
            xmlns:xlink="http://www.w3.org/1999/xlink"> 
            <svg id="mins5" overflow="visible">
                <line class="hourTick tick" x1="45" x2="50" transform="rotate(0)"/>
                <line class="tick" x1="48" x2="50" transform="rotate(6)"/>
                <line class="tick" x1="48" x2="50" transform="rotate(12)"/>
                <line class="tick" x1="48" x2="50" transform="rotate(18)"/>
                <line class="tick" x1="48" x2="50" transform="rotate(24)"/>
            </svg>
            <symbol id="clockFace" viewBox="0 0 100 100">
                <rect width="100" height="100" fill="grey"/>
                <circle cx="50" cy="50" r="50" fill="white" stroke="black"/>
                <g class="ticks" transform="translate(50,50)">
                    <use xlink:href="#mins5" transform="rotate(0)"/>
                    <use xlink:href="#mins5" transform="rotate(30)"/>
                    <use xlink:href="#mins5" transform="rotate(60)"/>
                    <use xlink:href="#mins5" transform="rotate(90)"/>
                    <use xlink:href="#mins5" transform="rotate(120)"/>
                    <use xlink:href="#mins5" transform="rotate(150)"/>
                    <use xlink:href="#mins5" transform="rotate(180)"/>
                    <use xlink:href="#mins5" transform="rotate(210)"/>
                    <use xlink:href="#mins5" transform="rotate(240)"/>
                    <use xlink:href="#mins5" transform="rotate(270)"/>
                    <use xlink:href="#mins5" transform="rotate(300)"/>
                    <use xlink:href="#mins5" transform="rotate(330)"/>
                </g>
            </symbol>
            <g class="small clock" transform=" scale(0.25) ">
                <use xlink:href="#clockFace"/>
                <text class="label" name="city" x="50" y="10" text-anchor="middle">London</text>
                <g transform="translate(50,50)">
                    <line class="hour" y2="-25"/>
                    <line class="minute" y2="-35"/>
                    <line class="second" y2="-40"/>
                </g>
            </g>
            <g class="small clock" transform="translate(0,25) scale(0.25) ">
                <use xlink:href="#clockFace"/>
                <text class="label" name="city" x="50" y="10" text-anchor="middle">New York</text>
                <text x="50" y="20" text-anchor="middle"><tspan class="hour">00</tspan>:<tspan
                        class="minute">00</tspan>:<tspan class="second">00</tspan></text>
                <g transform="translate(50,50)">
                    <line class="hour" y2="-25"/>
                    <line class="minute" y2="-35"/>
                    <line class="second" y2="-40"/>
                </g>
            </g>
            <g class="clock large" transform="translate(25) scale(0.5)">
                <use xlink:href="#clockFace"/>
                <text class="label" name="city" x="50" y="10" text-anchor="middle">Your Time</text>
                <g transform="translate(50,50)">
                    <path class="hour" fill="none"
                        d="M 0 0 v -25 c 0 4 2 4 2 8 m -2 -8 c 0 4 -2 4 -2 8 "/>
                    <line class="minute" y2="-35"/>
                    <line class="second" y2="-40"/>
                </g>
            </g>
            <g class="small clock" transform="translate(75) scale(0.25) ">
                <use xlink:href="#clockFace"/>
                <text class="label" name="city" x="50" y="10" text-anchor="middle">Delhi</text>
                <text x="50" y="20" text-anchor="middle"><tspan class="hour">00</tspan>:<tspan
                        class="minute">00</tspan></text>
                <g transform="translate(50,50)">
                    <line class="hour" y2="-25"/>
                    <line class="minute" y2="-35"/>
                </g>
            </g>
            <g class="small clock" transform="translate(75,25) scale(0.25) ">
                <use xlink:href="#clockFace"/>
                <text class="label" name="city" x="50" y="10" text-anchor="middle">Tokyo</text>
                <g transform="translate(50,50)">
                    <line class="hour" y2="-25"/>
                    <line class="minute" y2="-35"/>
                    <line class="second" y2="-40"/>
                </g>
            </g>
        </svg>
    </body>
</html>
